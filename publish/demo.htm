<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>微信小程序演讲 - By 肖旭东</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.moon.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide hasnote"><aside class="note">
<section>
<p>交流会？
小程序是前端的开发技术，先抛砖引玉</p>

</section>
</aside><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>微信小程序的故事</h1>
<h2>—— 周边技术分享</h2>
<h2>@小米游戏 FE 肖旭东</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>大家的关注点？</h1>

</hgroup><article>

<ul class="zoomIn">
<li>产品说，小程序和H5的区别？小程序和app的区别</li>
<li>开发说，怎么开发小程序 -&gt; 有哪些优缺点 -&gt; 和其它技术的关系？</li>
<li>运营说，我能用它做什么？</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><hgroup>
<h1>提纲</h1>

</hgroup><article>

<ul class="rollIn">
<li>产品角度介绍小程序的特点、属性</li>
<li>小程序的开发框架和开发流程</li>
<li>小程序与其它技术的比较</li>
<li>谈谈小程序的前景（自由讨论）</li>
</ul>

</article></section></slide>
<slide class="slide fill" style="background-image:url('./img/xc-bg.png')"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>demo演示</h1>

</article></section></slide>
<slide class="slide fill" style="background-image:url('./img/xc-demo2.png')"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>demo演示</h1>

</article></section></slide>
<slide class="slide hasnote"><aside class="note">
<section>
<h2><a href="http://jiezhao.baijia.baidu.com/article/737795" target="_blank">微信公开课pro</a></h2>
<p>为什么~</p>
<div style="font-size:20px;">张小龙畅想了一下十年以后的智能设备的形式,可能在手机之后，会有类似眼镜之类的设备，变得非常智能化的时候，可能整个PC智能系统藏在眼镜里，屏幕可能比现在还要大，可能十年以后可以投影到我们的视网膜里，通过眼镜就可以看到，日常可能带着眼镜到处跑.
那个时候应用程序应该跟现在不一样，我希望到时候眼镜里不需要现在这样要安装应用程序的过程，希望我眼镜看到哪里，相关的应用程序就在哪里。
举个例子，比如我看到房子里的一盏灯，我透过智能眼镜，看到灯的时候，灯的上方就可能像现在AR一样出现一个虚拟的开关，这个开关是出现在真实物品上的虚拟程序。
同样可以想象非常多的场景。但你走到公园门口的时候，可能门口会自动出现门票的程序，也就是当你看到任何实物的时候，这个实物背后的应用程序会自动浮现出来，然后通过眼镜或者别的方法启动应用，比如进行购票。
在未来智能眼镜里，你会发现应用程序已经是完全不同的形态，跟我们现在手机里的程序完全不一样，是真正所见即所得，这不是PC时代UI画图的所见即所得，而是我们见到的具体事务，就包含了具体信息、对信息的处理在里面。
他认为应用程序应该是无处不在，又是随时访问的状态。</div>
</section>
</aside><section class="slide-wrapper"><article class="flexbox vleft">
<h1>微信为什么会推出这个产品？</h1>
<blockquote>
<p><a href="http://daxue.qq.com/content/content/id/3109" target="_blank">微信公开课pro</a>中张小龙说小程序是：</p>
<ul class="rollIn">
<li>不需要安装</li>
<li>触手可及：通过二维码连接一切</li>
<li>用完即走</li>
<li>不需要卸载</li>
</ul>
</blockquote>

</article></section></slide>
<slide class="slide hasnote"><aside class="note">
<section>
<p>怎么做？
提供了一套开发框架，依赖框架去开发网页页面，然后上传到微信服务器即可。
I think：小程序本质还是一套前端框架，微信团队
（1）原来微信里的第三方页面，只能通过h5来实现（本可以由native实现的功能），例如上传图片等；
（2）进而采取开放部分jsbridge的api来方便开发者 —— jssdk： wx.ready(function(){});等 wx.xxx开头的接口（为微信用户提供更优质的网页体验）
（3）实现了一套类似vue、react一样的mvvm的框架 —— 微信小程序
官方说明：小程序开发框架的目标是通过尽可能简单、高效的方式让开发者可以在微信中开发具有原生 APP 体验的服务。
声明式语言
虚拟dom：以某种方式在内存中存储我们的 DOM 树
AndroidManifest.xml</p>

</section>
</aside><section class="slide-wrapper"><article class="flexbox vleft">
<h1>小程序如何开发? </h1>
<h2>(1)技术语言：wxml 、wxss、js</h2>
<h2>(2)微信提供了开发框架MINA</h2>
<h2>(3)已有的前端开发框架：Angular、React、Vue</h2>
<ul>
<li>模板DSL</li>
<li>数据绑定: service 到view的单向数据流</li>
<li>事件系统: 实现view到service的通信</li>
<li>组件化：
 <a href="./img/xc-component.png">天然的组件</a></li>
<li>生命周期钩子</li>
</ul>

</article></section></slide>
<slide class="slide hasnote"><aside class="note">
<section>
<p>微信的api其实是很不友好的，它为网页开发者提供了访问设备的能力。
我们为什么不用web技术去构建应用？</p>

</section>
</aside><section class="slide-wrapper"><hgroup>
<h1><a href="./img/xcapi.png">微信原生 API</a></h1>

</hgroup><article>

<div class="rows2">
    <img style="border-radius:10px;" src="./img/xc-xc.png" height="280" width="900">
    <br/><br/>
    <img style="border-radius:10px;" src="./img/xc-ionic.png" height="280" width="900">
</div>
</article></section></slide>
<slide class="slide"   data-on-build="Slide.magic" data-on-enter="Slide.magic.init"><aside class="note">
<section>
<div style="overflow-y:scroll;font-size:18px;">
webApp:H5页面 用web技术（js、html、css）构建的应用程序
    运行环境:
       ->移动端浏览器:内置浏览器\UC\QQ...我们在开发的时候也需要注意每一个浏览器单独的特性,可以应用一些特性完成更好的交互体验

       ->hybrid模式:把我们开发的H5页面嵌入到native app中,H5是运行在APP中的webView中的(我们可以把webView理解为webkit内核的一款浏览器);
       目前一般公司中,都是由app开发一个壳子,把需要调取系统方法的功能实现(例如:拍照...),然后里面的主体内容都是由H5开发.

       React native/phoneGap...都是提供一套框架,前端开发人员只需要按照对应的API使用JS去把原来APP人员干的活实现,最后框架会帮我们生成两套APP代码(IOS\安卓);

       微信小程序诞生;
<br/>
APP:安装在手机上的应用(Native App/原生的App);
    优势:
      ->直接安装到手机内部操作系统中的应用,这样的话就可以对手机内部的软件和硬件进行操作了(当然有些东西需要用户授权);
    弊端:
      ->IOS系统采用object-c,安卓系统采用java-native进行开发,不同操作系统需要开发多套产品,开发团队也需要多个,成本高
      ->IOS的APP上线到苹果商店需要审核期
      ->应用需要更新的时候,需要用户自主性选择更新
<br/>
webApp:
    优势:
      ->可以跨平台,开发一套产品,多平台适用
      ->更新不需要用户自主选择,项目在我们自己的服务器上,只要我们服务器上更新了,用户重新访问看到的就是最新的.

    弊端:
      ->H5页面是运行在其他的宿主环境中的(不是手机操作系统),所以想要操作手机内部的软件或者硬件,需要看一下宿主环境是否支持
      ->虽然说现在有一些浏览器都支持,但是操作性能非常不好(native.js);
<br/>
**技术地位**整体把握**
PWA：https://yanshuo.io/assets/player/?deck=5753088f79bc440063aa84f0
</div>
</section>
</aside><section class="slide-wrapper"><article class="flexbox vleft">
<h1>小程序与其它技术的区别？ </h1>
<div class="magic"><div class="magicItem current pagedown"  data-transition="cover-circle"><article>
<div class="magic-wrapper">
<article>
<h3><span class="yellow">小程序与H5页面的区别？</span></h3>
<p>(1) H5页面是小程序的组成部分，实现业务需求。
<br/>(2) 应用程序本身还需要的能力（微信实现）：</p>
<ul>
<li>访问设备的能力</li>
<li>离线存储的能力</li>
<li>应用程序具有生命周期
 <br/>启动、挂起、恢复和销毁等状态</li>
</ul>

</article>
</div>
</article></div>
<div class="magicItem next pagedown"  data-transition="cover-circle"><article>
<div class="magic-wrapper">
<article>
<h3><span class="yellow">小程序与本地应用的区别？</span></h3>
<ul>
<li>小程序是使用web技术开发的应用</li>
<li>小程序是无需安装、无需卸载<h3><div class="red">微信期望于把自己打造成一个应用平台。</div></h3>
<h3><div class="red">web技术恰好是一种契合张小龙“用完即走”产品理念的解决方案。</div></h3>
<h3><div class="red" style="text-decoration:underline">Weixin world web。</div></h3>
</li>
</ul>

</article>
</div>
</article></div>
<div class="magicItem far-next pagedown"  data-transition="cover-circle"><article>
<div class="magic-wrapper">
<article>
<h3><div class="yellow">Web应用平台的技术方案？</div></h3>
<ul>
<li><strong>×</strong>web操作系统: firefox OS</li>
<li><strong>√</strong>浏览器或者其它类似的产品包含支持web应用的能力:   <div style="margin-left:38px;">Chromium的桌面版、Google PWA技术</div></li>
<li><strong><em>?</em></strong>以独立的框架存在于传统的操作系统: web应用本身会打包成本地应用</li>
</ul>

</article>
</div>
</article></div>
<div class="magicItem "  data-transition="cover-circle"><article>
<div class="magic-wrapper">
<article>
<ul>
<li>使用cordova 的打包工具将web应用打包成一个个同系统相关的本地可执行文件
<a href="./img/ionic.txt">打包演示</a>
<img style="border-radius:50px;" src="./img/cordova.png"></img></li>
</ul>

</article>
</div>
</article></div></div>
</article></section></slide>
<slide class="slide hasnote"><aside class="note">
<section>
<p>总结一下，我对小程序能做什么的想法~</p>

</section>
</aside><section class="slide-wrapper"><hgroup>
<h1>小程序能做什么？</h1>

</hgroup><article>

<table>
<thead>
<tr>
<th style="text-align:left">N/A</th>
<th style="text-align:center">简单体验（页面）</th>
<th style="text-align:center">中等体验（mini-app）</th>
<th style="text-align:center">核心体验（app）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">纯微信流</td>
<td style="text-align:center">公众号，小程序</td>
<td style="text-align:center">小程序</td>
<td style="text-align:center">我想要个原生</td>
</tr>
<tr>
<td style="text-align:left">创业公司</td>
<td style="text-align:center">公众号，web，小程序</td>
<td style="text-align:center">web，小程序</td>
<td style="text-align:center">拉回原生啊</td>
</tr>
<tr>
<td style="text-align:left">中大公司</td>
<td style="text-align:center">公众号，web，小程序</td>
<td style="text-align:center">web，小程序</td>
<td style="text-align:center">拉回原生啊</td>
</tr>
<tr>
<td style="text-align:left">巨头公司</td>
<td style="text-align:center">公众号，web</td>
<td style="text-align:center">不跟微信玩</td>
<td style="text-align:center">不跟微信玩</td>
</tr>
</tbody>
</table>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><span class="text-success" style="font-size:60px;">Thank you！</span></p>

</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
    var ASSET_RELATIVE_DIR = ".";
</script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
if (typeof ASSET_RELATIVE_DIR === 'string') {
    path = path + '/' + ASSET_RELATIVE_DIR;
}
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'horizontal3d',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/demo.js"></script>
<link rel="stylesheet" href="./css/demo.css">
<script src="./js/zoom.js"></script>

<!-- MathJax -->
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
  config: ["TeX-AMS-MML_HTMLorMML.js"],
  tex2jax: {inlineMath: [['\\(','\\)']]}});
  //['$','$'], 避免货币价格冲突
</script>
<script type="text/javascript" src="./js/mathjax/MathJax.js"></script>

<!--placeholder-->
</body>
</html>
